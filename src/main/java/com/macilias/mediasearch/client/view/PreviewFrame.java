package com.macilias.mediasearch.client.view;

import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.Insets;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;

import javax.swing.ImageIcon;
import javax.swing.JComponent;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;

import com.macilias.mediasearch.client.model.MediaSearchHit;
import com.macilias.mediasearch.extensions.layout.CenteredFrame;
import org.apache.log4j.Logger;

public class PreviewFrame {

	private static final Logger LOG = Logger.getLogger(PreviewFrame.class);

	private JPanel externalPrewievPanel;
	private JPanel previewPanel;
	private CenteredFrame frame;


	public void showImage(final MediaSearchHit mediaSearchHit) {
		byte[] picture = mediaSearchHit.getPicture();
		if (picture != null) {
			ImageIcon imageIcon = new ImageIcon(picture);
			JLabel label = new JLabel(imageIcon);
			if (previewPanel.getComponents().length > 0 && previewPanel.getComponent(0) != null) {
				previewPanel.remove(0);
			}
			Dimension pictureDim = new Dimension(label.getDisabledIcon().getIconWidth(), label.getDisabledIcon().getIconHeight());
			previewPanel.setSize(pictureDim.width, pictureDim.height);
			previewPanel.add(label, 0);

			open(mediaSearchHit.getName());
		}
	}


	private void open(final String title) {
		LOG.info(String.format("The picture '%s' will be displayed in a separate window", title));
		if (frame == null) {
			initializeFrame(title);
		}
		frame.center();
		frame.setVisible(true);
	}


	public void hidePreview() {
		frame.setVisible(false);
	}


	private void initializeFrame(final String title) {
		frame = new CenteredFrame(title);
		frame.setContentPane(externalPrewievPanel);
		frame.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
		frame.addKeyListener(new KeyAdapter() {
			@Override
			public void keyPressed(final KeyEvent e) {
				if (e.getKeyCode() == KeyEvent.VK_SPACE || e.getKeyCode() == KeyEvent.VK_ESCAPE) {
					LOG.info(String.format("The separate picture window was requested to close"));
					frame.setVisible(false);
				}
			}
		});
	}


	public PreviewFrame() {
		// GUI initializer generated by IntelliJ IDEA GUI Designer
		// >>> IMPORTANT!! <<<
		// DO NOT EDIT OR ADD ANY CODE HERE!
		$$$setupUI$$$();
	}


	/**
	 * Method generated by IntelliJ IDEA GUI Designer
	 * >>> IMPORTANT!! <<<
	 * DO NOT edit this method OR call it in your code!
	 *
	 * @noinspection ALL
	 */
	private void $$$setupUI$$$() {
		externalPrewievPanel = new JPanel();
		externalPrewievPanel.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
		final JScrollPane scrollPane1 = new JScrollPane();
		externalPrewievPanel.add(scrollPane1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
		previewPanel = new JPanel();
		previewPanel.setLayout(new BorderLayout(0, 0));
		scrollPane1.setViewportView(previewPanel);
	}


	/**
	 * @noinspection ALL
	 */
	public JComponent $$$getRootComponent$$$() {
		return externalPrewievPanel;
	}
}
